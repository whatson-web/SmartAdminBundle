<?php
namespace {{NameSpace}}\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;

use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Request;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter;

use {{ NameSpace }}\Entity\{{ EntityName }};
use {{ NameSpace }}\Form\{{ EntityName }}Type;

class {{Controller}}Controller extends Controller
{


    public function indexAction()
    {

        $em = $this->getDoctrine()->getEntityManager();

        $entities = $em->getRepository('{{Entity}}')->findAll();


        return $this->render('{{Entity}}:admin/index.html.twig', array(
                'entities' => $entities
            )
        );

    }

    public function createAction(Request $request)
    {

        $entity = new {{EntityName}}();

        $form = $this->createForm(new {{EntityName}}Type(), $entity);

        $form->handleRequest($request);

        if ($form->isValid()) {

            $em = $this->getDoctrine()->getManager();
            $em->persist($entity);

            $em->flush();

            $request->getSession()->getFlashBag()->add('success', '{{EntityName}} ajoutÃ©');

            $response = new JsonResponse();

            $response->setData(array(
                    'valid'     => true,
                    'redirect'  => $this->generateUrl('{{EntityRouteIndex}}')
                ));

            return $response;

        }

        return $this->render('{{Entity}}:admin/create.html.twig', array(
                'form' => $form->createView()
            )
        );
    }

    /**
     * UPDATE
     *
     * @param ${{EntityName}}
     * @param Request $request
     * @ParamConverter("{{EntityName}}", class="{{Entity}}")
     */
    public function updateAction(${{EntityName}}, Request $request)
    {

        $form = $this->createForm(new {{EntityName}}Type(), ${{EntityName}});

        $form->handleRequest($request);

        if ($form->isValid()) {

            $em = $this->getDoctrine()->getManager();
            $em->persist(${{EntityName}});

            $em->flush();

            $request->getSession()->getFlashBag()->add('success', '{{EntityName}} modifiÃ©e');

            $response = new JsonResponse();

            $response->setData(array(
                    'valid'     => true,
                    'redirect'  => $this->generateUrl('{{EntityRouteIndex}}')
                ));

            return $response;

        }

        return $this->render('{{Entity}}:admin/update.html.twig', array(
                'form' => $form->createView(),
                '{{EntityName}}' => ${{EntityName}}
            )
        );

    }

    /**
     * VIEW
     *
     * @param ${{EntityName}}
     * @ParamConverter("{{EntityName}}", class="{{ Entity }}")
    */
    public function viewAction(${{EntityName}}, Request $request)
    {

        return $this->render('{{Entity}}:admin/view.html.twig', array(
                '{{EntityName}}' => ${{EntityName}}
            )
        );

    }


    /**
     * SUPPRIMER
     *
     * @param Request $request
     * @ParamConverter("{{EntityName}}", class="{{Entity}}")
     */
    public function deleteAction(${{EntityName}}, Request $request)
    {

        $em = $this->getDoctrine()->getManager();

        $em->remove(${{EntityName}});
        $em->flush();

        $request->getSession()->getFlashBag()->add('success', '{{EntityName}} supprimÃ©e');

        return $this->redirect($request->headers->get('referer'));


    }

}
